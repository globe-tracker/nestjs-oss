version: 2.1

default_image: &default_image
  executor:
    name: node/default
    tag: "14.15.1"

default_resource_class: &default_resource_class
  resource_class: medium

defaults: &defaults
  <<: *default_image
  <<: *default_resource_class

orbs:
  node: circleci/node@4.7.0
  nx: nrwl/nx@1.0.0

set_env: &set_env
  name: Setup Environment Variables
  command: |
    echo 'Fetching Base Commit from Deploy Cache'
    if [[ ! -f dist/last-deploy.txt ]]
    then
      echo 'export AFFECTED_ARGS="--all"' >> $BASH_ENV
    else
      echo 'export AFFECTED_ARGS="--base $(cat dist/last-deploy.txt)"' >> $BASH_ENV
    fi
    source $BASH_ENV
    echo $AFFECTED_ARGS

nx-cache: &nx-cache
  key: nx-cloud-recipe-{{ checksum "yarn.lock" }}

# Reusable Commands
commands:
  yarn_install:
    description: Install Packages
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - node/install-packages:
          include-branch-in-cache-key: false
          cache-version: v3
          pkg-manager: yarn
      - save_cache:
          <<: *nx-cache
          paths:
            - ~/.cache

  restore_npm_cache:
    description: 'Restore Cached Dependencies'
    steps:
      - restore_cache:
          <<: *nx-cache

  setup:
    description: 'Setup Executor'
    steps:
      - checkout
      - run:
          <<: *set_env
      - attach_workspace:
          at: ~/project

# Available Jobs
jobs:
  initialise:
    <<: *defaults
    steps:
      - checkout
      - restore_npm_cache
      - yarn_install
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - dist

  build:
    <<: *defaults
    steps:
      - setup
      - run:
          command: >-
            yarn nx affected --target=build $AFFECTED_ARGS --parallel
            --max-parallel=3
          name: Run Builds
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
            - dist
      - store_artifacts:
          path: dist

  lint:
    <<: *defaults
    steps:
      - setup
      - run:
          command: >-
            yarn nx affected --target=lint $AFFECTED_ARGS --parallel
            --max-parallel=2
          name: Run Linting

  test:
    docker:
      - image: tiltdev/circleci-kind:v1.4.0
    steps:
      - setup_remote_docker
      - node/install:
          install-yarn: true
          node-version: 14.15.1
      - setup
      - run:
          command: >-
            with-kind-cluster.sh kubectl create namespace integration-tests && yarn nx affected --target=test $AFFECTED_ARGS --parallel --ci
            --max-parallel=2
          name: Run Unit Tests
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  publish:
    <<: *defaults
    steps:
      - setup
      - run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
      - run:
          command: >-
            yarn nx affected --target=publish $AFFECTED_ARGS --parallel
            --max-parallel=2
          name: Running NPM Publish
      - run: git rev-parse HEAD > dist/last-deploy.txt
      - save_cache:
         key: last-deploy-sha-{{ .Environment.CIRCLE_BRANCH }}-{{ .Revision }}
         paths:
           - dist/last-deploy.txt

workflows:
  build-and-test:
    jobs:
      - initialise
      - build:
          requires:
            - initialise
      - lint:
          requires:
            - initialise
      - test:
          requires:
            - initialise
      - publish:
          requires:
            - build
            - lint
            - test
